buildscript {
    ext {
        junit5Version = '5.2.0'
        h2Version = '1.4.197'
        h2Url = "jdbc:h2:file:$projectDir/tmp/unit_test"
    }

    dependencies {
        classpath group: 'com.h2database', name: 'h2', version: h2Version
    }
}

plugins {
    id 'maven-publish'
    id 'net.researchgate.release' version '2.7.0'
    id 'org.flywaydb.flyway' version '5.1.1'
    id 'nu.studer.jooq' version '2.0.11'
    id 'me.k11i.jackson.jackson-version-file-plugin'
}

dependencies {
    compileOnly group: 'org.jooq', name: 'jooq'
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-core'
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit5Version
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junit5Version
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.8.0'

    testImplementation group: 'org.jooq', name: 'jooq'
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-core'
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    testImplementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
    testImplementation group: 'com.h2database', name: 'h2', version: h2Version
    jooqRuntime group: 'com.h2database', name: 'h2', version: h2Version
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Jackson datatype: jOOQ'
                description = 'Add-on module for Jackson to serialize jOOQ records.'
                url = 'https://github.com/komiya-atsushi/jackson-datatype-jooq'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/komiya-atsushi/jackson-datatype-jooq.git'
                    url = 'https://github.com/komiya-atsushi/jackson-datatype-jooq'
                }
            }
        }
    }
}

flyway {
    url = h2Url
    user = 'sa'
    locations = ["filesystem:$projectDir/src/test/resources/db/migration"]
}

jooq {
    unitTest(sourceSets.test) {
        jdbc {
            driver = 'org.h2.Driver'
            url = h2Url
            user = 'sa'
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            database {
                name = 'org.jooq.util.h2.H2Database'
                includes = '.*'
                inputSchema = 'PUBLIC'
            }
        }
    }
}

generateUnitTestJooqSchemaSource.dependsOn(flywayClean, flywayMigrate)
compileTestJava.dependsOn(generateUnitTestJooqSchemaSource)

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }
}

generateJacksonVersionFile {
    packageName = "me.k11i.jackson.module.jooq"
}